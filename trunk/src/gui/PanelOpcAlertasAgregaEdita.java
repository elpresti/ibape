/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelOpcAlertasAgregaEdita.java
 *
 * Created on 15/04/2012, 01:29:40
 */
package gui;

import controllers.ControllerAlertas;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.alertas.Alerta;
import modelo.alertas.Condicion;
import modelo.alertas.Relacion;
import modelo.alertas.Variable;

/**
 *
 * @author Sebastian
 */
public class PanelOpcAlertasAgregaEdita extends javax.swing.JPanel {
    
    static PanelOpcAlertasAgregaEdita unicaInstancia;
    private int NRO_COL_ID_CONDICION;
    private int NRO_COL_DESCRIPCION;
    private int NRO_COL_ACCIONES;
    private int cantColumnas;
    private boolean modificandoCondicion;
    private boolean guardandoCondicion;
    private Color colorOriginalBtnIniciar;
    private DefaultTableModel modeloTabla;
    private Alerta alertaAct;
    private ArrayList <modelo.alertas.Variable> variables;
    private ArrayList <modelo.alertas.Relacion> relaciones;
    private boolean configCombo1=false;
    private boolean configCombo2=false;
    private int idProvCondicion;
    
    

    /** Creates new form PanelOpcAlertasAgregaEdita */
    private PanelOpcAlertasAgregaEdita() {
        initComponents();
        inicializador();
        cargaIconosDeBotones();    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAgregaEdita = new org.jdesktop.swingx.JXPanel();
        panelSuperior = new org.jdesktop.swingx.JXPanel();
        lblAlertaNueva = new org.jdesktop.swingx.JXLabel();
        scrollPanelMedio = new javax.swing.JScrollPane();
        panelMedio = new org.jdesktop.swingx.JXPanel();
        panelDatosAlerta = new org.jdesktop.swingx.JXPanel();
        panelNombre = new org.jdesktop.swingx.JXPanel();
        panelLblNombre = new org.jdesktop.swingx.JXPanel();
        lblNombre = new org.jdesktop.swingx.JXLabel();
        panelCampoNombre = new org.jdesktop.swingx.JXPanel();
        campoNombre = new javax.swing.JTextField();
        panelEstado = new org.jdesktop.swingx.JXPanel();
        panelLblEstado = new org.jdesktop.swingx.JXPanel();
        lblEstado = new org.jdesktop.swingx.JXLabel();
        panelComboEstado = new org.jdesktop.swingx.JXPanel();
        comboEstado = new javax.swing.JComboBox();
        panelTxtCondiciones = new org.jdesktop.swingx.JXPanel();
        lblCondiciones = new org.jdesktop.swingx.JXLabel();
        panelTablaCondiciones = new org.jdesktop.swingx.JXPanel();
        scrollTablaCondiciones = new javax.swing.JScrollPane();
        tablaCondiciones = new org.jdesktop.swingx.JXTable();
        panelAccionesCampElegida = new org.jdesktop.swingx.JXPanel();
        lblAccionesCondicion = new org.jdesktop.swingx.JXLabel();
        panelAcciones = new org.jdesktop.swingx.JXPanel();
        btnModificar = new org.jdesktop.swingx.JXHyperlink();
        btnEliminar = new org.jdesktop.swingx.JXHyperlink();
        btnInsertar = new org.jdesktop.swingx.JXHyperlink();
        panelRelleno = new org.jdesktop.swingx.JXPanel();
        jLabel1 = new javax.swing.JLabel();
        panelNuevaCondicion = new org.jdesktop.swingx.JXPanel();
        panelDatosCondicion = new org.jdesktop.swingx.JXPanel();
        panelVariable = new org.jdesktop.swingx.JXPanel();
        panelLblVariable = new org.jdesktop.swingx.JXPanel();
        lblVariable = new org.jdesktop.swingx.JXLabel();
        panelComboVariable = new org.jdesktop.swingx.JXPanel();
        jComboBox1 = new javax.swing.JComboBox();
        panelRelacion = new org.jdesktop.swingx.JXPanel();
        panelLblRelacion = new org.jdesktop.swingx.JXPanel();
        lblRelacion = new org.jdesktop.swingx.JXLabel();
        panelComboRelacion = new org.jdesktop.swingx.JXPanel();
        jComboBox2 = new javax.swing.JComboBox();
        panelValMin = new org.jdesktop.swingx.JXPanel();
        panelLblValMin = new org.jdesktop.swingx.JXPanel();
        lblValMin = new org.jdesktop.swingx.JXLabel();
        panelCampoValMin = new org.jdesktop.swingx.JXPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        panelValMax = new org.jdesktop.swingx.JXPanel();
        panelLblValMax = new org.jdesktop.swingx.JXPanel();
        lblValMax = new org.jdesktop.swingx.JXLabel();
        panelCampoValMax = new org.jdesktop.swingx.JXPanel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        panelBtnAgrega = new org.jdesktop.swingx.JXPanel();
        btnAgregar = new javax.swing.JButton();
        panelInferior = new org.jdesktop.swingx.JXPanel();
        btnVolver = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(500, 600));
        setMinimumSize(new java.awt.Dimension(500, 600));
        setPreferredSize(new java.awt.Dimension(500, 500));
        setLayout(new java.awt.BorderLayout());

        panelAgregaEdita.setPreferredSize(new java.awt.Dimension(500, 600));
        panelAgregaEdita.setLayout(new java.awt.BorderLayout());

        panelSuperior.setMaximumSize(new java.awt.Dimension(500, 30));
        panelSuperior.setMinimumSize(new java.awt.Dimension(500, 30));
        panelSuperior.setPreferredSize(new java.awt.Dimension(500, 30));

        lblAlertaNueva.setText("Alerta Nueva");
        lblAlertaNueva.setFont(new java.awt.Font("Tahoma", 0, 18));
        panelSuperior.add(lblAlertaNueva);

        panelAgregaEdita.add(panelSuperior, java.awt.BorderLayout.NORTH);

        scrollPanelMedio.setPreferredSize(new java.awt.Dimension(502, 502));

        panelMedio.setMaximumSize(new java.awt.Dimension(500, 550));
        panelMedio.setMinimumSize(new java.awt.Dimension(480, 520));
        panelMedio.setPreferredSize(new java.awt.Dimension(480, 520));
        panelMedio.setScrollableTracksViewportHeight(false);
        panelMedio.setScrollableTracksViewportWidth(false);
        panelMedio.setLayout(new javax.swing.BoxLayout(panelMedio, javax.swing.BoxLayout.PAGE_AXIS));

        panelDatosAlerta.setMaximumSize(new java.awt.Dimension(500, 100));
        panelDatosAlerta.setMinimumSize(new java.awt.Dimension(500, 100));
        panelDatosAlerta.setLayout(new java.awt.GridLayout(3, 1));

        panelNombre.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        panelLblNombre.setMaximumSize(new java.awt.Dimension(100, 33));
        panelLblNombre.setMinimumSize(new java.awt.Dimension(100, 33));
        panelLblNombre.setPreferredSize(new java.awt.Dimension(100, 33));
        panelLblNombre.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblNombre.setText("Nombre");
        lblNombre.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblNombre.add(lblNombre);

        panelNombre.add(panelLblNombre);

        panelCampoNombre.setMaximumSize(new java.awt.Dimension(400, 33));
        panelCampoNombre.setMinimumSize(new java.awt.Dimension(350, 33));
        panelCampoNombre.setPreferredSize(new java.awt.Dimension(350, 33));
        panelCampoNombre.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        campoNombre.setFont(new java.awt.Font("Tahoma", 0, 14));
        campoNombre.setText("Ingrese aqui el nombre de la alerta");
        campoNombre.setMaximumSize(new java.awt.Dimension(300, 23));
        campoNombre.setMinimumSize(new java.awt.Dimension(300, 23));
        campoNombre.setPreferredSize(new java.awt.Dimension(300, 23));
        panelCampoNombre.add(campoNombre);

        panelNombre.add(panelCampoNombre);

        panelDatosAlerta.add(panelNombre);

        panelEstado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        panelLblEstado.setMaximumSize(new java.awt.Dimension(100, 33));
        panelLblEstado.setMinimumSize(new java.awt.Dimension(100, 33));
        panelLblEstado.setPreferredSize(new java.awt.Dimension(100, 33));
        panelLblEstado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblEstado.setText("Estado");
        lblEstado.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblEstado.add(lblEstado);

        panelEstado.add(panelLblEstado);

        panelComboEstado.setMaximumSize(new java.awt.Dimension(400, 33));
        panelComboEstado.setMinimumSize(new java.awt.Dimension(350, 33));
        panelComboEstado.setPreferredSize(new java.awt.Dimension(350, 33));
        panelComboEstado.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        comboEstado.setFont(new java.awt.Font("Tahoma", 0, 14));
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Desactivada", "Activada" }));
        comboEstado.setMaximumSize(new java.awt.Dimension(150, 23));
        comboEstado.setMinimumSize(new java.awt.Dimension(150, 23));
        comboEstado.setPreferredSize(new java.awt.Dimension(150, 23));
        panelComboEstado.add(comboEstado);

        panelEstado.add(panelComboEstado);

        panelDatosAlerta.add(panelEstado);

        panelTxtCondiciones.setMinimumSize(new java.awt.Dimension(370, 20));
        panelTxtCondiciones.setPreferredSize(new java.awt.Dimension(370, 15));
        panelTxtCondiciones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        lblCondiciones.setText("Condiciones que deben cumplirse para que ocurra la alerta:");
        lblCondiciones.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelTxtCondiciones.add(lblCondiciones);

        panelDatosAlerta.add(panelTxtCondiciones);

        panelMedio.add(panelDatosAlerta);

        panelTablaCondiciones.setPreferredSize(new java.awt.Dimension(452, 180));
        panelTablaCondiciones.setLayout(new javax.swing.BoxLayout(panelTablaCondiciones, javax.swing.BoxLayout.PAGE_AXIS));

        scrollTablaCondiciones.setMaximumSize(new java.awt.Dimension(452, 180));
        scrollTablaCondiciones.setPreferredSize(new java.awt.Dimension(452, 150));

        tablaCondiciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "null", "Descripcion", "Accion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaCondiciones.setPreferredSize(new java.awt.Dimension(400, 72));
        tablaCondiciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCondicionesMouseClicked(evt);
            }
        });
        scrollTablaCondiciones.setViewportView(tablaCondiciones);
        tablaCondiciones.getColumnModel().getColumn(0).setMinWidth(0);
        tablaCondiciones.getColumnModel().getColumn(0).setPreferredWidth(0);
        tablaCondiciones.getColumnModel().getColumn(0).setMaxWidth(0);
        tablaCondiciones.getColumnModel().getColumn(1).setMinWidth(400);
        tablaCondiciones.getColumnModel().getColumn(1).setPreferredWidth(400);
        tablaCondiciones.getColumnModel().getColumn(1).setMaxWidth(400);
        tablaCondiciones.getColumnModel().getColumn(2).setMinWidth(0);
        tablaCondiciones.getColumnModel().getColumn(2).setPreferredWidth(0);
        tablaCondiciones.getColumnModel().getColumn(2).setMaxWidth(0);

        panelTablaCondiciones.add(scrollTablaCondiciones);

        panelAccionesCampElegida.setMaximumSize(new java.awt.Dimension(450, 30));
        panelAccionesCampElegida.setMinimumSize(new java.awt.Dimension(450, 30));
        panelAccionesCampElegida.setPreferredSize(new java.awt.Dimension(450, 30));
        panelAccionesCampElegida.setLayout(new java.awt.GridLayout(1, 2));

        lblAccionesCondicion.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblAccionesCondicion.setText("Acciones condición seleccionada");
        lblAccionesCondicion.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelAccionesCampElegida.add(lblAccionesCondicion);

        panelAcciones.setMinimumSize(new java.awt.Dimension(62, 17));
        panelAcciones.setPreferredSize(new java.awt.Dimension(62, 17));
        panelAcciones.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 20, 5));

        btnModificar.setText("");
        btnModificar.setToolTipText("Modificar campaña");
        btnModificar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnModificar);

        btnEliminar.setText("");
        btnEliminar.setToolTipText("Eliminar campaña");
        btnEliminar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnEliminar);

        btnInsertar.setText("");
        btnInsertar.setToolTipText("Eliminar campaña");
        btnInsertar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });
        panelAcciones.add(btnInsertar);

        panelAccionesCampElegida.add(panelAcciones);

        panelTablaCondiciones.add(panelAccionesCampElegida);

        panelMedio.add(panelTablaCondiciones);

        panelRelleno.setPreferredSize(new java.awt.Dimension(450, 10));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        panelRelleno.add(jLabel1);

        panelMedio.add(panelRelleno);

        panelNuevaCondicion.setAlignmentY(3.0F);
        panelNuevaCondicion.setMaximumSize(new java.awt.Dimension(500, 200));
        panelNuevaCondicion.setMinimumSize(new java.awt.Dimension(500, 200));
        panelNuevaCondicion.setPreferredSize(new java.awt.Dimension(500, 200));
        panelNuevaCondicion.setLayout(new javax.swing.BoxLayout(panelNuevaCondicion, javax.swing.BoxLayout.PAGE_AXIS));

        panelDatosCondicion.setMaximumSize(new java.awt.Dimension(500, 170));
        panelDatosCondicion.setMinimumSize(new java.awt.Dimension(500, 170));
        panelDatosCondicion.setLayout(new java.awt.GridLayout(5, 1));

        panelVariable.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        panelLblVariable.setMaximumSize(new java.awt.Dimension(150, 34));
        panelLblVariable.setMinimumSize(new java.awt.Dimension(150, 34));
        panelLblVariable.setPreferredSize(new java.awt.Dimension(150, 34));
        panelLblVariable.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblVariable.setText("Variable a monitorear");
        lblVariable.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblVariable.add(lblVariable);

        panelVariable.add(panelLblVariable);

        panelComboVariable.setMaximumSize(new java.awt.Dimension(350, 34));
        panelComboVariable.setMinimumSize(new java.awt.Dimension(300, 34));
        panelComboVariable.setPreferredSize(new java.awt.Dimension(300, 34));
        panelComboVariable.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox1.setMaximumSize(new java.awt.Dimension(200, 23));
        jComboBox1.setMinimumSize(new java.awt.Dimension(200, 23));
        jComboBox1.setPreferredSize(new java.awt.Dimension(200, 23));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jComboBox1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jComboBox1InputMethodTextChanged(evt);
            }
        });
        panelComboVariable.add(jComboBox1);

        panelVariable.add(panelComboVariable);

        panelDatosCondicion.add(panelVariable);

        panelRelacion.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        panelLblRelacion.setMaximumSize(new java.awt.Dimension(150, 34));
        panelLblRelacion.setMinimumSize(new java.awt.Dimension(150, 34));
        panelLblRelacion.setPreferredSize(new java.awt.Dimension(150, 34));
        panelLblRelacion.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblRelacion.setText("Relacion de variable");
        lblRelacion.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblRelacion.add(lblRelacion);

        panelRelacion.add(panelLblRelacion);

        panelComboRelacion.setMaximumSize(new java.awt.Dimension(350, 34));
        panelComboRelacion.setMinimumSize(new java.awt.Dimension(300, 34));
        panelComboRelacion.setPreferredSize(new java.awt.Dimension(300, 34));
        panelComboRelacion.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jComboBox2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jComboBox2.setMaximumSize(new java.awt.Dimension(150, 23));
        jComboBox2.setMinimumSize(new java.awt.Dimension(150, 23));
        jComboBox2.setPreferredSize(new java.awt.Dimension(150, 23));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });
        panelComboRelacion.add(jComboBox2);

        panelRelacion.add(panelComboRelacion);

        panelDatosCondicion.add(panelRelacion);

        panelValMin.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        panelLblValMin.setMaximumSize(new java.awt.Dimension(150, 34));
        panelLblValMin.setMinimumSize(new java.awt.Dimension(150, 34));
        panelLblValMin.setPreferredSize(new java.awt.Dimension(150, 34));
        panelLblValMin.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblValMin.setText("Valor mínimo");
        lblValMin.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblValMin.add(lblValMin);

        panelValMin.add(panelLblValMin);

        panelCampoValMin.setMaximumSize(new java.awt.Dimension(350, 34));
        panelCampoValMin.setMinimumSize(new java.awt.Dimension(300, 34));
        panelCampoValMin.setPreferredSize(new java.awt.Dimension(300, 34));
        panelCampoValMin.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14));
        jTextField1.setMaximumSize(new java.awt.Dimension(150, 23));
        jTextField1.setMinimumSize(new java.awt.Dimension(150, 23));
        jTextField1.setPreferredSize(new java.awt.Dimension(150, 23));
        panelCampoValMin.add(jTextField1);
        panelCampoValMin.add(jLabel3);

        panelValMin.add(panelCampoValMin);

        panelDatosCondicion.add(panelValMin);

        panelValMax.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 0, 0));

        panelLblValMax.setMaximumSize(new java.awt.Dimension(150, 34));
        panelLblValMax.setMinimumSize(new java.awt.Dimension(150, 34));
        panelLblValMax.setPreferredSize(new java.awt.Dimension(150, 34));
        panelLblValMax.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        lblValMax.setText("Valor máximo");
        lblValMax.setFont(new java.awt.Font("Tahoma", 0, 14));
        panelLblValMax.add(lblValMax);

        panelValMax.add(panelLblValMax);

        panelCampoValMax.setMaximumSize(new java.awt.Dimension(350, 34));
        panelCampoValMax.setMinimumSize(new java.awt.Dimension(300, 34));
        panelCampoValMax.setPreferredSize(new java.awt.Dimension(300, 34));
        panelCampoValMax.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14));
        jTextField2.setMaximumSize(new java.awt.Dimension(150, 23));
        jTextField2.setMinimumSize(new java.awt.Dimension(150, 23));
        jTextField2.setPreferredSize(new java.awt.Dimension(150, 23));
        panelCampoValMax.add(jTextField2);
        panelCampoValMax.add(jLabel2);

        panelValMax.add(panelCampoValMax);

        panelDatosCondicion.add(panelValMax);

        btnAgregar.setText("Agregar Condición");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        panelBtnAgrega.add(btnAgregar);

        panelDatosCondicion.add(panelBtnAgrega);

        panelNuevaCondicion.add(panelDatosCondicion);

        panelMedio.add(panelNuevaCondicion);

        scrollPanelMedio.setViewportView(panelMedio);

        panelAgregaEdita.add(scrollPanelMedio, java.awt.BorderLayout.LINE_END);

        panelInferior.setMaximumSize(new java.awt.Dimension(500, 50));
        panelInferior.setMinimumSize(new java.awt.Dimension(500, 50));
        panelInferior.setPreferredSize(new java.awt.Dimension(500, 50));
        panelInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 15));

        btnVolver.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });
        panelInferior.add(btnVolver);

        btnGuardar.setFont(new java.awt.Font("Tahoma", 0, 14));
        btnGuardar.setText("Guardar");
        panelInferior.add(btnGuardar);

        panelAgregaEdita.add(panelInferior, java.awt.BorderLayout.SOUTH);

        add(panelAgregaEdita, java.awt.BorderLayout.LINE_END);
    }// </editor-fold>//GEN-END:initComponents

private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
    agregaCondicionTabla();    
    setModificandoCondicion(false);
    setGuardandoCondicion(true);
    controlaPanelNuevaCondicion(false);
    controlaPanelAccionesCondicion();
    setGuardandoCondicion(false);
    
    
}//GEN-LAST:event_btnAgregarActionPerformed

private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
// TODO add your handling code here:
    setVisible(false);
    PanelOpcAlertas.getInstance().getPanelAlertasPpal().setVisible(true);
}//GEN-LAST:event_btnVolverActionPerformed

private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
    setModificandoCondicion(true);
    setGuiModificarFilaElegida();    
    controlaPanelAccionesCondicion();
}//GEN-LAST:event_btnModificarActionPerformed

private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
    String txtPregunta = "Está por eliminar una alerta del disco, está usted seguro?";
    if (JOptionPane.showConfirmDialog(null, txtPregunta, "Eliminar alerta seleccionada", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
        controllers.ControllerAlertas.getInstance().borrarAlerta(getIdDeCondicionSeleccionada());
        controlaPanelAccionesCondicion();
    }
}//GEN-LAST:event_btnEliminarActionPerformed

private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
if (!configCombo1) {
        cambioVariableAct();
        actualizaPanelValoresUnidades();
    }
}//GEN-LAST:event_jComboBox1ActionPerformed

private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
    if (!configCombo1) {
        cambioVariableAct();

        actualizaPanelValoresUnidades();
    }
    
}//GEN-LAST:event_jComboBox1ItemStateChanged

private void jComboBox1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jComboBox1InputMethodTextChanged

}//GEN-LAST:event_jComboBox1InputMethodTextChanged

private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
    if (!configCombo2) {
        cambioRelacionAct();
        actualizaPanelValoresUnidades();
    }
}//GEN-LAST:event_jComboBox2ActionPerformed

private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarActionPerformed
    controlaPanelNuevaCondicion(true);
}//GEN-LAST:event_btnInsertarActionPerformed

private void tablaCondicionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCondicionesMouseClicked
    controlaPanelAccionesCondicion();
}//GEN-LAST:event_tablaCondicionesMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private org.jdesktop.swingx.JXHyperlink btnEliminar;
    private javax.swing.JButton btnGuardar;
    private org.jdesktop.swingx.JXHyperlink btnInsertar;
    private org.jdesktop.swingx.JXHyperlink btnModificar;
    private javax.swing.JButton btnVolver;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JComboBox comboEstado;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private org.jdesktop.swingx.JXLabel lblAccionesCondicion;
    private org.jdesktop.swingx.JXLabel lblAlertaNueva;
    private org.jdesktop.swingx.JXLabel lblCondiciones;
    private org.jdesktop.swingx.JXLabel lblEstado;
    private org.jdesktop.swingx.JXLabel lblNombre;
    private org.jdesktop.swingx.JXLabel lblRelacion;
    private org.jdesktop.swingx.JXLabel lblValMax;
    private org.jdesktop.swingx.JXLabel lblValMin;
    private org.jdesktop.swingx.JXLabel lblVariable;
    private org.jdesktop.swingx.JXPanel panelAcciones;
    private org.jdesktop.swingx.JXPanel panelAccionesCampElegida;
    private org.jdesktop.swingx.JXPanel panelAgregaEdita;
    private org.jdesktop.swingx.JXPanel panelBtnAgrega;
    private org.jdesktop.swingx.JXPanel panelCampoNombre;
    private org.jdesktop.swingx.JXPanel panelCampoValMax;
    private org.jdesktop.swingx.JXPanel panelCampoValMin;
    private org.jdesktop.swingx.JXPanel panelComboEstado;
    private org.jdesktop.swingx.JXPanel panelComboRelacion;
    private org.jdesktop.swingx.JXPanel panelComboVariable;
    private org.jdesktop.swingx.JXPanel panelDatosAlerta;
    private org.jdesktop.swingx.JXPanel panelDatosCondicion;
    private org.jdesktop.swingx.JXPanel panelEstado;
    private org.jdesktop.swingx.JXPanel panelInferior;
    private org.jdesktop.swingx.JXPanel panelLblEstado;
    private org.jdesktop.swingx.JXPanel panelLblNombre;
    private org.jdesktop.swingx.JXPanel panelLblRelacion;
    private org.jdesktop.swingx.JXPanel panelLblValMax;
    private org.jdesktop.swingx.JXPanel panelLblValMin;
    private org.jdesktop.swingx.JXPanel panelLblVariable;
    private org.jdesktop.swingx.JXPanel panelMedio;
    private org.jdesktop.swingx.JXPanel panelNombre;
    private org.jdesktop.swingx.JXPanel panelNuevaCondicion;
    private org.jdesktop.swingx.JXPanel panelRelacion;
    private org.jdesktop.swingx.JXPanel panelRelleno;
    private org.jdesktop.swingx.JXPanel panelSuperior;
    private org.jdesktop.swingx.JXPanel panelTablaCondiciones;
    private org.jdesktop.swingx.JXPanel panelTxtCondiciones;
    private org.jdesktop.swingx.JXPanel panelValMax;
    private org.jdesktop.swingx.JXPanel panelValMin;
    private org.jdesktop.swingx.JXPanel panelVariable;
    private javax.swing.JScrollPane scrollPanelMedio;
    private javax.swing.JScrollPane scrollTablaCondiciones;
    private org.jdesktop.swingx.JXTable tablaCondiciones;
    // End of variables declaration//GEN-END:variables
 
    private void inicializador() {
        //String[] columnas = new String[cantColumnas];
        //columnas[NRO_COL_ID_CAMP]="ID";
        //columnas[NRO_COL_ACCIONES]="Acciones";
        //columnas[NRO_COL_BARCO]="Barco";
        //columnas[NRO_COL_CAPITAN]="Capitan";
        //columnas[NRO_COL_DURACION]="Duracion";
        //columnas[NRO_COL_FECHA_FIN]="Fecha Fin";
        //columnas[NRO_COL_FECHA_INI]="Fecha Inicio";
        //columnas[NRO_COL_NOMBRE_CAMP]="Nombre campaña";        
        //modeloTabla = new javax.swing.table.TableModel(new Object[][]{},columnas);        
        //tablaCampanias.setModel(modeloTabla);
                                       
        //tablaCampanias.setDefaultRenderer(Object.class, new PanelOpcCampaniasAcciones());
        //tablaCampanias.setDefaultEditor(Object.class, new PanelOpcCampaniasAcciones());
/*
        TableColumn columnaAcciones = new TableColumn();
        columnaAcciones.setHeaderValue("Acciones!");
        columnaAcciones.setMinWidth(100);
        columnaAcciones.setPreferredWidth(100);
        columnaAcciones.setCellEditor(new PanelOpcCampaniasAcciones());
        columnaAcciones.setCellRenderer(new PanelOpcCampaniasAcciones());        
        tablaCampanias.addColumn(columnaAcciones);        
        tablaCampanias.setEditingColumn(6);
        //tablaCampanias.setEditingRow(0);
*/      
        idProvCondicion=10000;
        modificandoCondicion=false;
        NRO_COL_ID_CONDICION=0;
        NRO_COL_DESCRIPCION=1;
        NRO_COL_ACCIONES=2;
        controlaPanelNuevaCondicion(false);
        cantColumnas=3;        
        modeloTabla = (DefaultTableModel) tablaCondiciones.getModel();
        tablaCondiciones.setModel(modeloTabla);
        cargaIconosDeBotones();
        cargaGrillaCondiciones();
        cargaPanelConfigCondicion();
        controlaPanelAccionesCondicion();
        // Se crea el JScrollPane, el JTable y se pone la cabecera...
         //JScrollPane scroll = new JScrollPane();
         //tablaCampanias.setDefaultRenderer(Object.class, new PanelOpcCampaniasAcciones());
         //tablaCampanias.setDefaultEditor(Object.class, new PanelOpcCampaniasAcciones());
         //scroll.setViewportView(tablaCampanias);
         //scroll.setColumnHeaderView (tablaCampanias.getTableHeader());        
        //tablaCampanias.setVisibleRowCount(6);
        
/* si queremos que algun campo sea editable, capturar el evento y demas... 
        TableColumn column = tablaCampanias.getColumnModel().getColumn(NRO_COL_ACCIONES);
        JXHyperlink btnGuardar = new JXHyperlink(); btnGuardar.setText("guardar");
        JXHyperlink btnModificar = new JXHyperlink(); btnModificar.setText("modif");
        JXHyperlink btnEliminar = new JXHyperlink(); btnEliminar.setText("Eliminar");
        
        
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXHyperlinkBtnGuardarActionPerformed(evt);
            }
        });
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //jXHyperlinkBtnModificarActionPerformed(evt);
                System.out.println("no hace nada xq falta codificar el método");
            }
        });
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                //jXHyperlinkBtnEliminarActionPerformed(evt);
                System.out.println("no hace nada xq falta codificar el método");
            }
        });
        
        //Indicamos el CellEditor column
        column.setCellEditor(new DefaultCellEditor(btnEliminar));

        //Metodo para controlar el texto ingresado en el JTextField.

    }

    private void jXHyperlinkBtnGuardarActionPerformed(java.awt.event.ActionEvent evt) {
        try {        cargaIconosDeBotones();
            //String tmp = this.fieldPago.getText();
            //Double Pago = Double.parseDouble(tmp);
            //Obtenemos el numero de fila donde estamos ubicamos en este momento.
            int fila = tablaCampanias.getSelectedRow();

            if (fila == -1) {
                JOptionPane.showMessageDialog(this, "No se selecciono ninguna fila", "Mensaje", JOptionPane.WARNING_MESSAGE);
                return;
            }
            int id = (int)tablaCampanias.getValueAt(fila, 0);
            Double Deuda = Double.parseDouble(tmp);
            tmp = String.valueOf(tablaCampanias.getValueAt(fila, 5));
            Double Saldo = Double.parseDouble(tmp);
            if (Pago < 0) {
                JOptionPane.showMessageDialog(this, "El pago no puede ser negativo", "Mensaje", JOptionPane.WARNING_MESSAGE);
                tablaCampanias.setValueAt(0.0, fila, 4);
                return;
            }

            //Actualizamos otra columna con los valores, esta columna debe ser editable
            tablaCampanias.setValueAt(Pago, fila, 5);
            tablaCampanias.repaint();
            modeloTabla.fireTableDataChanged();
            JOptionPane.showMessageDialog(this, "Presionaste Enter pago de " + Pago, "Mensaje", JOptionPane.WARNING_MESSAGE);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Error " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
*/
    }
    
        private void cargaIconosDeBotones() {
        btnModificar.setIcon(new javax.swing.ImageIcon("imgs//iconos//tabla-icono-editar.png"));
        btnEliminar.setIcon(new javax.swing.ImageIcon("imgs//iconos//tabla-icono-eliminar.png"));
        btnInsertar.setIcon(new javax.swing.ImageIcon("imgs//iconos//icono.png"));
    }
    
    public static PanelOpcAlertasAgregaEdita getInstance() {
       if (unicaInstancia == null) {
          unicaInstancia = new PanelOpcAlertasAgregaEdita();          
       }
       return unicaInstancia;
    }



    public void vaciaTabla() {
        modeloTabla.setRowCount(0);
    }

    /**
     * @return the alertaAct
     */
    public Alerta getAlertaAct() {
        return alertaAct;
    }

    /**
     * @param alertaAct the alertaAct to set
     */
    public void setAlertaAct(Alerta alertaAct) {
        this.alertaAct = alertaAct;
    }

    public void agregaUnaFilaCondicion(int id, String descripcion) {
        Object[] fila = new Object[cantColumnas]; //creamos la fila
        fila[NRO_COL_ACCIONES]=panelAcciones;
        fila[NRO_COL_ID_CONDICION]=id;
        fila[NRO_COL_DESCRIPCION]=descripcion;
        modeloTabla.addRow(fila);
    }

            private void cargaGrillaCondiciones() {
        vaciaTabla();
        if (!(getAlertaAct()==null)){
        List<modelo.alertas.Condicion> condiciones = getAlertaAct().getCondiciones();
        /*
        if ((condiciones == null) || (condiciones.isEmpty()) ) {
            modelo.alertas.AdministraAlertas.getInstance().leerAlertasDeLaDB();
            alertas = modelo.alertas.AdministraAlertas.getInstance().getAlertas();            
        }   
         */
         
        if ((!(condiciones == null)) && (condiciones.size() > 0)) {
            // while (), pongo cada objeto Condicion en la grilla de condiciones                    
            int i = 0;
            while (i < condiciones.size()) {
                agregaUnaFilaCondicion(
                        condiciones.get(i).getId(),
                        condiciones.get(i).getDescripcion()
                        );
                i++;
            }
            
        }
        }
    }
    
    private void controlaPanelAccionesCondicion() {
        
        boolean estado;
        
        if ((modeloTabla.getRowCount()>0) && (getIdDeCondicionSeleccionada()>=0) ){
           estado = true;
        }
        else { estado = false; }
        lblAccionesCondicion.setEnabled(estado);

        btnEliminar.setEnabled(estado);
        btnModificar.setEnabled(estado);  
        if (isModificandoCondicion()){
            btnInsertar.setVisible(false);
            btnModificar.setVisible(false);
            btnEliminar.setVisible(false);
            tablaCondiciones.setEnabled(false);
        }
        else
            { 
              btnModificar.setVisible(true);
              btnEliminar.setVisible(true);
              btnInsertar.setVisible(true);
              tablaCondiciones.setEnabled(true);            
            }
    }

    /**
     * @return the modificandoCondicion
     */
    public boolean isModificandoCondicion() {
        return modificandoCondicion;
    }

    /**
     * @param modificandoCondicion the modificandoCondicion to set
     */
    public void setModificandoCondicion(boolean modificandoCondicion) {
        this.modificandoCondicion = modificandoCondicion;
    }

    private int getIdDeCondicionSeleccionada() {
        
        int salida = -1;
        int filaSeleccionada = tablaCondiciones.getSelectedRow();
        if (filaSeleccionada>=0){
            salida = (Integer) modeloTabla.getValueAt(filaSeleccionada, NRO_COL_ID_CONDICION);
        }                
        return salida;
    }

    private void setGuiModificarFilaElegida() {
       int filaSeleccionada = tablaCondiciones.getSelectedRow();
       if (filaSeleccionada>=0){
           //Pendiente: Mostrar panel para modificacion de Condicion elegida
           
           btnAgregar.setText("Guardar");
           jLabel1.setText("Modificar datos de condición");
           controlaPanelNuevaCondicion(true);
           int indexCondicion=(int) modeloTabla.getValueAt(filaSeleccionada,NRO_COL_ID_CONDICION);
           
           controllers.ControllerAlertas.getInstance().cambiaDatosActuales(indexCondicion);
           cargaPanelConfigCondicion();
       }
    }

    private void cargaPanelConfigCondicion() {
        
        configCombo1=true;
        configCombo2=true;
        cargaComboVariables();
        cargaComboRelacion();
        actualizaPanelValoresUnidades();
        configCombo1=false;
        configCombo2=false;
        
        
    }

    private void agregaUnItemVariable(int id, String nombre) {
        jComboBox1.addItem(nombre);
    }

    private void cargaComboVariables() {
        
        //Obtengo todas las variables de la BD
        //jComboBox1.removeAllItems();
        if (!modificandoCondicion){
        ControllerAlertas.getInstance().leeVariablesDB();
        variables = controllers.ControllerAlertas.getInstance().getVariables();
 
        if ((!(variables == null)) && (variables.size() > 0)) {
            // while (), pongo cada objeto Condicion en la grilla de condiciones                    
            int i = 0;
            while (i < variables.size()) {
                agregaUnItemVariable(
                        variables.get(i).getId(),
                        variables.get(i).getNombre());
                i++;
            }
        }
        controllers.ControllerAlertas.getInstance().setVariableAct(variables.get(0));
        }else{
            jComboBox1.setSelectedIndex(controllers.ControllerAlertas.getInstance().getVariableAct().getId());
        }
    }

    private void cargaComboRelacion() {
                
        //Obtengo todas las relaciones de la BD
        if (!modificandoCondicion){
        ControllerAlertas.getInstance().leeRelacionesDB(controllers.ControllerAlertas.getInstance().getVariableAct().getId());
        relaciones = controllers.ControllerAlertas.getInstance().getRelaciones();
 
        if ((!(relaciones == null)) && (relaciones.size() > 0)) {
            // while (), pongo cada objeto Condicion en la grilla de condiciones                    
            int i = 0;
            while (i < relaciones.size()) {
                agregaUnItemRelacion(
                        relaciones.get(i).getId(),
                        relaciones.get(i).getDescripcion(),
                        relaciones.get(i).getCantValores());
                i++;
            }
        }
        controllers.ControllerAlertas.getInstance().setRelacionAct(relaciones.get(0));
        }else{
            jComboBox2.setSelectedIndex(controllers.ControllerAlertas.getInstance().getRelacionAct().getId());
        
        }
    }

    private void agregaUnItemRelacion(int id, String descripcion, int cantValores) {
        jComboBox2.addItem(descripcion);
    }

    private void actualizaPanelValoresUnidades() {
        
        if (controllers.ControllerAlertas.getInstance().getRelacionAct().getCantValores()==1){
            panelValMax.disable();            
            lblValMin.setText("Valor");
            lblValMax.setText("");
            jLabel2.setText("");           
            jTextField2.hide();
            Condicion condicionAct=controllers.ControllerAlertas.getInstance().getCondicionAct();
            if (condicionAct!=null){
            jTextField1.setText(Float.toString(condicionAct.getValorMinimo()));
            }
            
        }else{
            lblValMin.setText("Valor mínimo");
            lblValMax.setText("Valor máximo");
            panelValMax.enable();
            jLabel2.show();
            jTextField2.show();
            Condicion condicionAct=controllers.ControllerAlertas.getInstance().getCondicionAct();
            if (condicionAct!=null){
                jTextField1.setText(Float.toString(condicionAct.getValorMinimo()));
                jTextField2.setText(Float.toString(condicionAct.getValorMaximo()));                      
            }
            jLabel2.setText(controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad());
            
        }
        jLabel3.setText(controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad());
        
    }

    private void cambioVariableAct() {
        controllers.ControllerAlertas.getInstance().setVariableAct(variables.get(jComboBox1.getSelectedIndex()));
    }

    private void cambioRelacionAct() {
        controllers.ControllerAlertas.getInstance().setRelacionAct(relaciones.get(jComboBox2.getSelectedIndex()));
    }

    public void agregaCondicionTabla(){
        
        if (isModificandoCondicion()){
                   
            int filaSeleccionada = tablaCondiciones.getSelectedRow();
            int backIdProvCondicion=idProvCondicion;
            idProvCondicion=(int) modeloTabla.getValueAt(filaSeleccionada,NRO_COL_ID_CONDICION);
            
            int cantValores=controllers.ControllerAlertas.getInstance().getRelacionAct().getCantValores();
            String descripcion="";
            Float valorMin= new Float(jTextField1.getText());
        
            if (cantValores==1){
            descripcion=""+controllers.ControllerAlertas.getInstance().getVariableAct().getNombre()+" "+controllers.ControllerAlertas.getInstance().getRelacionAct().getDescripcion()+" "+jTextField1.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad();
            controllers.ControllerAlertas.getInstance().agregaCondicionAct(idProvCondicion,controllers.ControllerAlertas.getInstance().getRelacionAct().getId(), controllers.ControllerAlertas.getInstance().getVariableAct().getId(), valorMin, -1, descripcion);    
            }else{
            Float valorMax= new Float(jTextField2.getText());
            descripcion=""+controllers.ControllerAlertas.getInstance().getVariableAct().getNombre()+" "+controllers.ControllerAlertas.getInstance().getRelacionAct().getDescripcion()+" "+jTextField1.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad()+" y "+jTextField2.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad();             
            }
            modeloTabla.setValueAt(descripcion,filaSeleccionada,NRO_COL_DESCRIPCION);
            idProvCondicion=backIdProvCondicion+1;
            
                }else{
            
                    int cantValores=controllers.ControllerAlertas.getInstance().getRelacionAct().getCantValores();
                    String descripcion="";
                    Float valorMin= new Float(jTextField1.getText());

                    if (cantValores==1){
                        descripcion=""+controllers.ControllerAlertas.getInstance().getVariableAct().getNombre()+" "+controllers.ControllerAlertas.getInstance().getRelacionAct().getDescripcion()+" "+jTextField1.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad();
                        controllers.ControllerAlertas.getInstance().agregaCondicionAct(idProvCondicion,controllers.ControllerAlertas.getInstance().getRelacionAct().getId(), controllers.ControllerAlertas.getInstance().getVariableAct().getId(), valorMin, -1, descripcion);

                    }else{
                        Float valorMax= new Float(jTextField2.getText());
                        descripcion=""+controllers.ControllerAlertas.getInstance().getVariableAct().getNombre()+" "+controllers.ControllerAlertas.getInstance().getRelacionAct().getDescripcion()+" "+jTextField1.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad()+" y "+jTextField2.getText()+" "+controllers.ControllerAlertas.getInstance().getVariableAct().getUnidad();     
                        controllers.ControllerAlertas.getInstance().agregaCondicionAct(idProvCondicion,controllers.ControllerAlertas.getInstance().getRelacionAct().getId(), controllers.ControllerAlertas.getInstance().getVariableAct().getId(),valorMin, valorMax, descripcion);    
                    }
                    agregaUnaFilaCondicion(idProvCondicion,descripcion);
        }
        
        
    }

    private void controlaPanelNuevaCondicion(boolean b) {
        
        panelDatosCondicion.setEnabled(b);
    }

    /**
     * @return the guardandoCondicion
     */
    public boolean isGuardandoCondicion() {
        return guardandoCondicion;
    }

    /**
     * @param guardandoCondicion the guardandoCondicion to set
     */
    public void setGuardandoCondicion(boolean guardandoCondicion) {
        this.guardandoCondicion = guardandoCondicion;
    }





    
}
